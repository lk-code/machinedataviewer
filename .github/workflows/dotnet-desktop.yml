name: .NET Core Desktop

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:

  build:

    runs-on: windows-latest

    env:
      VERSION: 1.0.${{ github.run_number }}
      Configuration: Release
      Solution_Name: DataViewer.sln
      Test_Project_Path: source\DataViewer.Tests\DataViewer.Tests.csproj
      Wap_Project_Directory: source\DataViewer.Setup
      Wap_Project_Path: source\DataViewer.Setup\DataViewer.Setup.wapproj

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Execute unit tests
      run: dotnet test $env:Test_Project_Path

    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration

    - name: Version Visual Studio SDK projects
      uses: roryprimrose/set-vs-sdk-project-version@v1.0.6
      with:
        version: ${{ env.VERSION }}
        assemblyVersion: ${{ env.VERSION }}
        fileVersion: ${{ env.VERSION }}
        informationalVersion: ${{ env.VERSION }}

    - name: Create the app package
      run: msbuild $env:Wap_Project_Path /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle /p:Version=$env:VERSION
      env:
        Appx_Bundle: Always
        Appx_Bundle_Platforms: x86|x64
        Appx_Package_Build_Mode: Sideload

    - name: Create Release ZIP
      run: Compress-Archive -Path $env:Wap_Project_Directory\bin\x86\Release\DataViewer\ -DestinationPath ${{ env.VERSION }}.zip
        
    - name: Set Version Git Tag
      run: |
        git tag ${{ env.VERSION }}
        git push origin ${{ env.VERSION }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: MSIX Package
        path: ${{ env.Wap_Project_Directory }}\AppPackages

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: MSIX Package
        path: ${{ env.VERSION }}.zip
        
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.VERSION }}
        release_name: Release v${{ env.VERSION }}
        body: v${{ env.VERSION }}
        draft: false
        prerelease: false
    
    - name: Load MSIX to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.Wap_Project_Directory }}\AppPackages\DataViewer.Setup_1.0.0.0_Test\DataViewer.Setup_1.0.0.0_x86.msixbundle
        asset_name: ${{ env.VERSION }}_x86.msix
        asset_content_type: application/octet-stream

    - name: Load ZIP to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.VERSION }}.zip
        asset_name: ${{ env.VERSION }}.zip
        asset_content_type: application/x-zip
